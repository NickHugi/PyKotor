[build-system]
requires = [
    "setuptools>=67.8.0,<70",
    "wheel"
]
build-backend = "setuptools.build_meta"

[project]
name = "HolocronToolset"
version = "3.1.1"
description = "A PyQt5-backed program with a collection of tools and editors that make it easy to work with kotor files"
requires-python = ">= 3.8"
dependencies = [
    "idna",  # Tested with 3.3
    "urllib3~=1.26",
    "watchdog>=2.1,<3.1",
    "Markdown>=3.3,<3.6",
    "jsmin~=3.0",
    "qtpy",
    "send2trash",
    "pykotor>=1.7",
    "pykotorgl>=1.0",
]
authors = [
    {name = "NickHugi"},
    {name = "Benjamin Auquite", email = "halomastar@gmail.com"}
]
maintainers = [
    {name = "Benjamin Auquite", email = "halomastar@gmail.com"},
]
readme = {file = "README.md", content-type = "text/markdown"}
license = {text = "LGPL-3.0-or-later License"}
keywords = ["kotor", "pyqt5", "holocron", "toolset", "pykotor", "star", "wars", "starwars", "toolset", "toolkit", "opengl", "designer", "module", "modding", "dlgeditor", "AIO", "editor", "GFF"]

[project.optional-dependencies]
updater = [
    "requests>=2.27,<2.32",
    "certifi==2021.10.8",
    "pycryptodome>=3.19.0"
]
dev = [
    "pytest-qt>=4.2.0",
    "pytest-xvfb>=3.0.0",
    "types-Pillow",
    "types-Send2Trash"
]
qt5 = ["PyQt5>=5.15", "PyQt5-Qt5>=5.15", "PyQt5-sip>=12.10"]
qt6 = ["PyQt6>=6.6.1"]
pyside2 = ["PySide2>=5.15.2"]
pyside6 = ["PySide6>=6.6.3.1"]

[project.urls]
Homepage = "https://github.com/NickHugi/PyKotor"
Documentation = "https://github.com/NickHugi/PyKotor/blob/master/README.md"
Repository = "https://github.com/NickHugi/PyKotor.git"
Issues = "https://github.com/NickHugi/PyKotor/issues"
#Changelog = "https://github.com/NickHugi/PyKotor/blob/master/CHANGELOG.md"

# Optional Poetry configuration for those who prefer it
[tool.poetry]
name = "holocrontoolset"
version = "3.1.1"
description = "A PyQt5-backed program with a collection of tools and editors that make it easy to work with kotor files"
authors = ["NickHugi", "Benjamin Auquite <halomastar@gmail.com>"]
readme = "README.md"
packages = [{ include = "toolset", from = "src" }]

[tool.poetry.dependencies]
python = "^3.8"
idna = "*"
urllib3 = "~1.26"
Markdown = ">=3.3,<3.6"
jsmin = "~3.0"
qtpy = "*"
send2trash = "*"
pykotor = "^1.0.0"  # Will be replaced by PyPI version when split

# Optional dependencies
pycryptodome = { version = "^3.19.0", optional = true }
requests = { version = "^2.31.0", optional = true }
PyQt5 = { version = "~5.15", optional = true }
PyQt6 = { version = "^6.6.1", optional = true }
PySide2 = { version = "^5.15.2", python = ">=3.8,<3.11", optional = true }
PySide6 = { version = "^6.6.3.1", python = ">=3.8,<3.13", optional = true }

[tool.poetry.group.dev.dependencies]
pytest-qt = "^4.2.0"
pytest-xvfb = "^3.0.0"
types-Pillow = "*"
types-Send2Trash = "*"

[tool.poetry.extras]
qt = ["pyqt5 | pyqt6 | pyside2 | pyside6"]
updater = ["pycryptodome", "requests"]
qt5 = ["PyQt5"]
qt6 = ["PyQt6"]
pyside2 = ["PySide2"]
pyside6 = ["PySide6"]


########################################################
## define only linter configurations below this point ##
########################################################

[tool.ruff]
extend = "../../pyproject.toml"

[tool.ruff.lint]
ignore = [
    "N",     # disable snake_case vs PascalCase/camelCase checks for pyqt5
]

[tool.ruff.lint.per-file-ignores]
"tests/*.py" = ["ALL"]
".github/*py" = ["INP001"]
"__init__.py" = ["I001", "F401"]
"globalsettings.py" = ["I001", "F401"]
"./src/toolset/*.py" = ["FBT003", "N802", "N803", "N806", "A001"]
"./src/toolset/uic/*.py" = ["ALL"]  # uic's are auto-generated
"resources_rc.py" = ["ALL"]
".mdx" = ["ALL"]
".mdl" = ["ALL"]
"pykotor/resource/formats/ncs/compiler/*.py" = ["ALL"]

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false

[tool.ruff.lint.isort]
required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.pyupgrade]
keep-runtime-typing = true

[tool.mccabe]
max-complexity = 25

[tool.style]
based_on_style = "pep8"
split_before_named_assigns = true
split_complex_comprehension = true
split_arguments_when_comma_terminated = true

[tool.pylintrc]
max-line-length = 175
