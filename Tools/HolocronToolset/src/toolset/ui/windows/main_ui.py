
################################################################################
## Form generated from reading UI file 'main.ui'
##
## Created by: Qt User Interface Compiler version 6.6.3
##
## WARNING! All changes made in this file will be lost when recompiling UI file!
################################################################################
from __future__ import annotations

from PySide6.QtCore import QCoreApplication, QMetaObject, QRect, QSize
from PySide6.QtGui import QAction, QIcon
from PySide6.QtWidgets import (
    QCheckBox,
    QComboBox,
    QFrame,
    QGridLayout,
    QGroupBox,
    QHBoxLayout,
    QLayout,
    QMenu,
    QMenuBar,
    QPushButton,
    QSizePolicy,
    QSpacerItem,
    QStatusBar,
    QTabWidget,
    QVBoxLayout,
    QWidget,
)

from toolset.gui.widgets.main_widgets import ResourceList, TextureList


class Ui_MainWindow:
    def setupUi(self, MainWindow):
        if not MainWindow.objectName():
            MainWindow.setObjectName("MainWindow")
        MainWindow.resize(512, 471)
        MainWindow.setAcceptDrops(True)
        self.cloneModuleAction = QAction(MainWindow)
        self.cloneModuleAction.setObjectName("cloneModuleAction")
        self.actionRecent_Files = QAction(MainWindow)
        self.actionRecent_Files.setObjectName("actionRecent_Files")
        self.actionExit = QAction(MainWindow)
        self.actionExit.setObjectName("actionExit")
        self.actionSettings = QAction(MainWindow)
        self.actionSettings.setObjectName("actionSettings")
        self.actionAbout = QAction(MainWindow)
        self.actionAbout.setObjectName("actionAbout")
        self.actionOpen = QAction(MainWindow)
        self.actionOpen.setObjectName("actionOpen")
        self.actionCheck_for_Updates = QAction(MainWindow)
        self.actionCheck_for_Updates.setObjectName("actionCheck_for_Updates")
        self.actionCreature = QAction(MainWindow)
        self.actionCreature.setObjectName("actionCreature")
        self.actionItem = QAction(MainWindow)
        self.actionItem.setObjectName("actionItem")
        self.actionDoor = QAction(MainWindow)
        self.actionDoor.setObjectName("actionDoor")
        self.actionPlaceable = QAction(MainWindow)
        self.actionPlaceable.setObjectName("actionPlaceable")
        self.actionMerchant = QAction(MainWindow)
        self.actionMerchant.setObjectName("actionMerchant")
        self.actionEncounter = QAction(MainWindow)
        self.actionEncounter.setObjectName("actionEncounter")
        self.actionTrigger = QAction(MainWindow)
        self.actionTrigger.setObjectName("actionTrigger")
        self.actionWaypoint = QAction(MainWindow)
        self.actionWaypoint.setObjectName("actionWaypoint")
        self.actionDialog = QAction(MainWindow)
        self.actionDialog.setObjectName("actionDialog")
        self.actionDialog.setEnabled(False)
        self.openAction = QAction(MainWindow)
        self.openAction.setObjectName("openAction")
        self.actionNewGFF = QAction(MainWindow)
        self.actionNewGFF.setObjectName("actionNewGFF")
        self.actionNewERF = QAction(MainWindow)
        self.actionNewERF.setObjectName("actionNewERF")
        self.actionNewTXT = QAction(MainWindow)
        self.actionNewTXT.setObjectName("actionNewTXT")
        self.actionEditTLK = QAction(MainWindow)
        self.actionEditTLK.setObjectName("actionEditTLK")
        self.actionEditTLK.setEnabled(False)
        self.actionHelpUpdates = QAction(MainWindow)
        self.actionHelpUpdates.setObjectName("actionHelpUpdates")
        self.actionHelpAbout = QAction(MainWindow)
        self.actionHelpAbout.setObjectName("actionHelpAbout")
        self.actionNewSSF = QAction(MainWindow)
        self.actionNewSSF.setObjectName("actionNewSSF")
        self.actionNewUTC = QAction(MainWindow)
        self.actionNewUTC.setObjectName("actionNewUTC")
        self.actionNewUTC.setEnabled(False)
        icon = QIcon()
        icon.addFile(":/images/icons/kx/creature.png", QSize(), QIcon.Normal, QIcon.On)
        self.actionNewUTC.setIcon(icon)
        self.actionCloneModule = QAction(MainWindow)
        self.actionCloneModule.setObjectName("actionCloneModule")
        self.actionCloneModule.setEnabled(False)
        self.actionNewUTP = QAction(MainWindow)
        self.actionNewUTP.setObjectName("actionNewUTP")
        self.actionNewUTP.setEnabled(False)
        icon1 = QIcon()
        icon1.addFile(":/images/icons/kx/placeable.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionNewUTP.setIcon(icon1)
        self.actionNewUTD = QAction(MainWindow)
        self.actionNewUTD.setObjectName("actionNewUTD")
        self.actionNewUTD.setEnabled(False)
        icon2 = QIcon()
        icon2.addFile(":/images/icons/kx/door.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionNewUTD.setIcon(icon2)
        self.actionNewUTW = QAction(MainWindow)
        self.actionNewUTW.setObjectName("actionNewUTW")
        self.actionNewUTW.setEnabled(False)
        icon3 = QIcon()
        icon3.addFile(":/images/icons/kx/waypoint.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionNewUTW.setIcon(icon3)
        self.actionNewUTT = QAction(MainWindow)
        self.actionNewUTT.setObjectName("actionNewUTT")
        self.actionNewUTT.setEnabled(False)
        icon4 = QIcon()
        icon4.addFile(":/images/icons/kx/trigger.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionNewUTT.setIcon(icon4)
        self.actionNewUTE = QAction(MainWindow)
        self.actionNewUTE.setObjectName("actionNewUTE")
        self.actionNewUTE.setEnabled(False)
        icon5 = QIcon()
        icon5.addFile(":/images/icons/kx/encounter.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionNewUTE.setIcon(icon5)
        self.actionNewUTS = QAction(MainWindow)
        self.actionNewUTS.setObjectName("actionNewUTS")
        self.actionNewUTS.setEnabled(False)
        icon6 = QIcon()
        icon6.addFile(":/images/icons/kx/sound.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionNewUTS.setIcon(icon6)
        self.actionNewUTM = QAction(MainWindow)
        self.actionNewUTM.setObjectName("actionNewUTM")
        self.actionNewUTM.setEnabled(False)
        icon7 = QIcon()
        icon7.addFile(":/images/icons/kx/merchant.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionNewUTM.setIcon(icon7)
        self.actionNewTLK = QAction(MainWindow)
        self.actionNewTLK.setObjectName("actionNewTLK")
        self.actionNewTLK.setEnabled(True)
        icon8 = QIcon()
        icon8.addFile(":/images/icons/kx/tlk.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionNewTLK.setIcon(icon8)
        self.actionNewUTI = QAction(MainWindow)
        self.actionNewUTI.setObjectName("actionNewUTI")
        self.actionNewUTI.setEnabled(False)
        icon9 = QIcon()
        icon9.addFile(":/images/icons/kx/item.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionNewUTI.setIcon(icon9)
        self.actionNewDLG = QAction(MainWindow)
        self.actionNewDLG.setObjectName("actionNewDLG")
        self.actionNewDLG.setEnabled(False)
        icon10 = QIcon()
        icon10.addFile(":/images/icons/kx/dialog.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionNewDLG.setIcon(icon10)
        self.actionNewNSS = QAction(MainWindow)
        self.actionNewNSS.setObjectName("actionNewNSS")
        self.actionNewNSS.setEnabled(False)
        icon11 = QIcon()
        icon11.addFile(":/images/icons/kx/script.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionNewNSS.setIcon(icon11)
        self.actionEditJRL = QAction(MainWindow)
        self.actionEditJRL.setObjectName("actionEditJRL")
        self.actionEditJRL.setEnabled(False)
        self.actionFileSearch = QAction(MainWindow)
        self.actionFileSearch.setObjectName("actionFileSearch")
        self.actionFileSearch.setEnabled(False)
        self.actionGeometryEditor = QAction(MainWindow)
        self.actionGeometryEditor.setObjectName("actionGeometryEditor")
        self.actionGeometryEditor.setEnabled(False)
        self.defaultLight = QAction(MainWindow)
        self.defaultLight.setObjectName("defaultLight")
        self.fusionLight = QAction(MainWindow)
        self.fusionLight.setObjectName("fusionLight")
        self.fusionDark = QAction(MainWindow)
        self.fusionDark.setObjectName("fusionDark")
        self.breezeDark = QAction(MainWindow)
        self.breezeDark.setObjectName("breezeDark")
        self.qDarkStyle = QAction(MainWindow)
        self.qDarkStyle.setObjectName("qDarkStyle")
        self.amoled = QAction(MainWindow)
        self.amoled.setObjectName("amoled")
        self.aqua = QAction(MainWindow)
        self.aqua.setObjectName("aqua")
        self.consoleStyle = QAction(MainWindow)
        self.consoleStyle.setObjectName("consoleStyle")
        self.elegantDark = QAction(MainWindow)
        self.elegantDark.setObjectName("elegantDark")
        self.macOS = QAction(MainWindow)
        self.macOS.setObjectName("macOS")
        self.manjaroMix = QAction(MainWindow)
        self.manjaroMix.setObjectName("manjaroMix")
        self.materialDark = QAction(MainWindow)
        self.materialDark.setObjectName("materialDark")
        self.actionIndoorMapBuilder = QAction(MainWindow)
        self.actionIndoorMapBuilder.setObjectName("actionIndoorMapBuilder")
        self.actionIndoorMapBuilder.setEnabled(False)
        self.actionEditModule = QAction(MainWindow)
        self.actionEditModule.setObjectName("actionEditModule")
        self.actionEditModule.setEnabled(False)
        self.actionInstructions = QAction(MainWindow)
        self.actionInstructions.setObjectName("actionInstructions")
        self.actionDiscordHolocronToolset = QAction(MainWindow)
        self.actionDiscordHolocronToolset.setObjectName("actionDiscordHolocronToolset")
        self.actionDiscordKotOR = QAction(MainWindow)
        self.actionDiscordKotOR.setObjectName("actionDiscordKotOR")
        self.actionDiscordDeadlyStream = QAction(MainWindow)
        self.actionDiscordDeadlyStream.setObjectName("actionDiscordDeadlyStream")
        self.actionModuleDesigner = QAction(MainWindow)
        self.actionModuleDesigner.setObjectName("actionModuleDesigner")
        self.actionModuleDesigner.setEnabled(False)
        self.centralwidget = QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayout = QHBoxLayout(self.centralwidget)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.horizontalLayout.setSizeConstraint(QLayout.SetMinimumSize)
        self.verticalLayout_4 = QVBoxLayout()
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.gameCombo = QComboBox(self.centralwidget)
        self.gameCombo.setObjectName("gameCombo")

        self.verticalLayout_4.addWidget(self.gameCombo)

        self.resourceTabs = QTabWidget(self.centralwidget)
        self.resourceTabs.setObjectName("resourceTabs")
        self.coreTab = QWidget()
        self.coreTab.setObjectName("coreTab")
        self.verticalLayout_2 = QVBoxLayout(self.coreTab)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.coreWidget = ResourceList(self.coreTab)
        self.coreWidget.setObjectName("coreWidget")

        self.verticalLayout_2.addWidget(self.coreWidget)

        self.resourceTabs.addTab(self.coreTab, "")
        self.savesTab = QWidget()
        self.savesTab.setObjectName("savesTab")
        self.gridLayoutSaves = QGridLayout(self.savesTab)
        self.gridLayoutSaves.setSpacing(0)
        self.gridLayoutSaves.setObjectName("gridLayoutSaves")
        self.gridLayoutSaves.setContentsMargins(0, 0, 0, 0)
        self.savesWidget = ResourceList(self.savesTab)
        self.savesWidget.setObjectName("savesWidget")

        self.gridLayoutSaves.addWidget(self.savesWidget, 0, 0, 2, 2)

        self.resourceTabs.addTab(self.savesTab, "")
        self.modulesTab = QWidget()
        self.modulesTab.setObjectName("modulesTab")
        self.verticalLayoutModulesTab = QVBoxLayout(self.modulesTab)
        self.verticalLayoutModulesTab.setObjectName("verticalLayoutModulesTab")
        self.specialActionButton = QPushButton(self.modulesTab)
        self.specialActionButton.setObjectName("specialActionButton")

        self.verticalLayoutModulesTab.addWidget(self.specialActionButton)

        self.gridLayoutModules = QGridLayout()
        self.gridLayoutModules.setSpacing(0)
        self.gridLayoutModules.setObjectName("gridLayoutModules")
        self.gridLayoutModules.setContentsMargins(0, 0, 0, 0)
        self.modulesWidget = ResourceList(self.modulesTab)
        self.modulesWidget.setObjectName("modulesWidget")

        self.gridLayoutModules.addWidget(self.modulesWidget, 0, 0, 1, 2)


        self.verticalLayoutModulesTab.addLayout(self.gridLayoutModules)

        self.resourceTabs.addTab(self.modulesTab, "")
        self.overrideTab = QWidget()
        self.overrideTab.setObjectName("overrideTab")
        self.verticalLayout_3 = QVBoxLayout(self.overrideTab)
        self.verticalLayout_3.setSpacing(0)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.verticalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.overrideWidget = ResourceList(self.overrideTab)
        self.overrideWidget.setObjectName("overrideWidget")

        self.verticalLayout_3.addWidget(self.overrideWidget)

        self.resourceTabs.addTab(self.overrideTab, "")
        self.texturesTab = QWidget()
        self.texturesTab.setObjectName("texturesTab")
        self.verticalLayout_6 = QVBoxLayout(self.texturesTab)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.texturesWidget = TextureList(self.texturesTab)
        self.texturesWidget.setObjectName("texturesWidget")

        self.verticalLayout_6.addWidget(self.texturesWidget)

        self.resourceTabs.addTab(self.texturesTab, "")

        self.verticalLayout_4.addWidget(self.resourceTabs)


        self.horizontalLayout.addLayout(self.verticalLayout_4)

        self.vboxlayout = QVBoxLayout()
        self.vboxlayout.setObjectName("vboxlayout")
        self.vboxlayout.setSizeConstraint(QLayout.SetFixedSize)
        self.verticalSpacer_2 = QSpacerItem(124, 45, QSizePolicy.Policy.Minimum, QSizePolicy.Policy.Fixed)

        self.vboxlayout.addItem(self.verticalSpacer_2)

        self.sidebar = QFrame(self.centralwidget)
        self.sidebar.setObjectName("sidebar")
        self.sidebar.setFrameShape(QFrame.NoFrame)
        self.sidebar.setFrameShadow(QFrame.Raised)
        self.verticalLayoutRightPanel = QVBoxLayout(self.sidebar)
        self.verticalLayoutRightPanel.setObjectName("verticalLayoutRightPanel")
        self.verticalLayoutRightPanel.setContentsMargins(0, 0, 0, 0)
        self.openButton = QPushButton(self.sidebar)
        self.openButton.setObjectName("openButton")

        self.verticalLayoutRightPanel.addWidget(self.openButton)

        self.extractButton = QPushButton(self.sidebar)
        self.extractButton.setObjectName("extractButton")
        sizePolicy = QSizePolicy(QSizePolicy.Policy.Minimum, QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.extractButton.sizePolicy().hasHeightForWidth())
        self.extractButton.setSizePolicy(sizePolicy)

        self.verticalLayoutRightPanel.addWidget(self.extractButton)

        self.tpcGroup_2 = QGroupBox(self.sidebar)
        self.tpcGroup_2.setObjectName("tpcGroup_2")
        self.verticalLayout_10 = QVBoxLayout(self.tpcGroup_2)
        self.verticalLayout_10.setObjectName("verticalLayout_10")
        self.tpcDecompileCheckbox = QCheckBox(self.tpcGroup_2)
        self.tpcDecompileCheckbox.setObjectName("tpcDecompileCheckbox")

        self.verticalLayout_10.addWidget(self.tpcDecompileCheckbox)

        self.tpcTxiCheckbox = QCheckBox(self.tpcGroup_2)
        self.tpcTxiCheckbox.setObjectName("tpcTxiCheckbox")

        self.verticalLayout_10.addWidget(self.tpcTxiCheckbox)


        self.verticalLayoutRightPanel.addWidget(self.tpcGroup_2)

        self.mdlGroup_2 = QGroupBox(self.sidebar)
        self.mdlGroup_2.setObjectName("mdlGroup_2")
        self.verticalLayout_9 = QVBoxLayout(self.mdlGroup_2)
        self.verticalLayout_9.setObjectName("verticalLayout_9")
        self.mdlDecompileCheckbox = QCheckBox(self.mdlGroup_2)
        self.mdlDecompileCheckbox.setObjectName("mdlDecompileCheckbox")
        self.mdlDecompileCheckbox.setEnabled(False)

        self.verticalLayout_9.addWidget(self.mdlDecompileCheckbox)

        self.mdlTexturesCheckbox = QCheckBox(self.mdlGroup_2)
        self.mdlTexturesCheckbox.setObjectName("mdlTexturesCheckbox")

        self.verticalLayout_9.addWidget(self.mdlTexturesCheckbox)


        self.verticalLayoutRightPanel.addWidget(self.mdlGroup_2)


        self.vboxlayout.addWidget(self.sidebar)

        self.verticalSpacer = QSpacerItem(124, 40, QSizePolicy.Policy.Minimum, QSizePolicy.Policy.Expanding)

        self.vboxlayout.addItem(self.verticalSpacer)


        self.horizontalLayout.addLayout(self.vboxlayout)

        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QMenuBar(MainWindow)
        self.menubar.setObjectName("menubar")
        self.menubar.setGeometry(QRect(0, 0, 512, 22))
        self.menuFile = QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuNew = QMenu(self.menuFile)
        self.menuNew.setObjectName("menuNew")
        self.menuRecentFiles = QMenu(self.menuFile)
        self.menuRecentFiles.setObjectName("menuRecentFiles")
        self.menuEdit = QMenu(self.menubar)
        self.menuEdit.setObjectName("menuEdit")
        self.menuTheme = QMenu(self.menubar)
        self.menuTheme.setObjectName("menuTheme")
        self.menuTools = QMenu(self.menubar)
        self.menuTools.setObjectName("menuTools")
        self.menuHelp = QMenu(self.menubar)
        self.menuHelp.setObjectName("menuHelp")
        self.menuDiscord = QMenu(self.menuHelp)
        self.menuDiscord.setObjectName("menuDiscord")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuEdit.menuAction())
        self.menubar.addAction(self.menuTools.menuAction())
        self.menubar.addAction(self.menuTheme.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())
        self.menuFile.addAction(self.menuNew.menuAction())
        self.menuFile.addAction(self.openAction)
        self.menuFile.addAction(self.menuRecentFiles.menuAction())
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionSettings)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionExit)
        self.menuNew.addAction(self.actionNewDLG)
        self.menuNew.addAction(self.actionNewNSS)
        self.menuNew.addAction(self.actionNewUTC)
        self.menuNew.addAction(self.actionNewUTP)
        self.menuNew.addAction(self.actionNewUTD)
        self.menuNew.addAction(self.actionNewUTI)
        self.menuNew.addAction(self.actionNewUTS)
        self.menuNew.addAction(self.actionNewUTT)
        self.menuNew.addAction(self.actionNewUTM)
        self.menuNew.addAction(self.actionNewUTW)
        self.menuNew.addAction(self.actionNewUTE)
        self.menuNew.addAction(self.actionNewTLK)
        self.menuNew.addSeparator()
        self.menuNew.addAction(self.actionNewGFF)
        self.menuNew.addAction(self.actionNewERF)
        self.menuNew.addAction(self.actionNewTXT)
        self.menuNew.addAction(self.actionNewSSF)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.actionEditTLK)
        self.menuEdit.addAction(self.actionEditJRL)
        self.menuTheme.addAction(self.defaultLight)
        self.menuTheme.addAction(self.fusionLight)
        self.menuTheme.addAction(self.fusionDark)
        self.menuTheme.addAction(self.qDarkStyle)
        self.menuTheme.addAction(self.amoled)
        self.menuTheme.addAction(self.aqua)
        self.menuTheme.addAction(self.consoleStyle)
        self.menuTheme.addAction(self.elegantDark)
        self.menuTheme.addAction(self.macOS)
        self.menuTheme.addAction(self.manjaroMix)
        self.menuTheme.addAction(self.materialDark)
        self.menuTheme.addAction(self.breezeDark)
        self.menuTools.addAction(self.actionModuleDesigner)
        self.menuTools.addAction(self.actionIndoorMapBuilder)
        self.menuTools.addSeparator()
        self.menuTools.addAction(self.actionFileSearch)
        self.menuTools.addAction(self.actionCloneModule)
        self.menuHelp.addAction(self.actionHelpAbout)
        self.menuHelp.addAction(self.menuDiscord.menuAction())
        self.menuHelp.addAction(self.actionInstructions)
        self.menuHelp.addAction(self.actionHelpUpdates)
        self.menuDiscord.addAction(self.actionDiscordHolocronToolset)
        self.menuDiscord.addAction(self.actionDiscordKotOR)
        self.menuDiscord.addAction(self.actionDiscordDeadlyStream)

        self.retranslateUi(MainWindow)

        self.resourceTabs.setCurrentIndex(0)


        QMetaObject.connectSlotsByName(MainWindow)
    # setupUi

    def retranslateUi(self, MainWindow):
        MainWindow.setWindowTitle(QCoreApplication.translate("MainWindow", "Holocron Toolset", None))
        self.cloneModuleAction.setText(QCoreApplication.translate("MainWindow", "Clone Module", None))
        self.actionRecent_Files.setText(QCoreApplication.translate("MainWindow", "Recent Files", None))
        self.actionExit.setText(QCoreApplication.translate("MainWindow", "Exit", None))
        self.actionSettings.setText(QCoreApplication.translate("MainWindow", "Settings", None))
        self.actionAbout.setText(QCoreApplication.translate("MainWindow", "About", None))
        self.actionOpen.setText(QCoreApplication.translate("MainWindow", "Open", None))
        self.actionCheck_for_Updates.setText(QCoreApplication.translate("MainWindow", "Check for Updates", None))
        self.actionCreature.setText(QCoreApplication.translate("MainWindow", "Creature", None))
        self.actionItem.setText(QCoreApplication.translate("MainWindow", "Item", None))
        self.actionDoor.setText(QCoreApplication.translate("MainWindow", "Door", None))
        self.actionPlaceable.setText(QCoreApplication.translate("MainWindow", "Placeable", None))
        self.actionMerchant.setText(QCoreApplication.translate("MainWindow", "Merchant", None))
        self.actionEncounter.setText(QCoreApplication.translate("MainWindow", "Encounter", None))
        self.actionTrigger.setText(QCoreApplication.translate("MainWindow", "Trigger", None))
        self.actionWaypoint.setText(QCoreApplication.translate("MainWindow", "Waypoint", None))
        self.actionDialog.setText(QCoreApplication.translate("MainWindow", "Dialog", None))
        self.openAction.setText(QCoreApplication.translate("MainWindow", "Open", None))
        self.actionNewGFF.setText(QCoreApplication.translate("MainWindow", "GFF", None))
        self.actionNewERF.setText(QCoreApplication.translate("MainWindow", "ERF", None))
        self.actionNewTXT.setText(QCoreApplication.translate("MainWindow", "TXT", None))
        self.actionEditTLK.setText(QCoreApplication.translate("MainWindow", "Edit Talk Table", None))
        self.actionHelpUpdates.setText(QCoreApplication.translate("MainWindow", "Check For Updates", None))
        self.actionHelpAbout.setText(QCoreApplication.translate("MainWindow", "About", None))
        self.actionNewSSF.setText(QCoreApplication.translate("MainWindow", "SSF", None))
        self.actionNewUTC.setText(QCoreApplication.translate("MainWindow", "Creature", None))
        self.actionCloneModule.setText(QCoreApplication.translate("MainWindow", "Clone Module", None))
        self.actionNewUTP.setText(QCoreApplication.translate("MainWindow", "Placeable", None))
        self.actionNewUTD.setText(QCoreApplication.translate("MainWindow", "Door", None))
        self.actionNewUTW.setText(QCoreApplication.translate("MainWindow", "Waypoint", None))
        self.actionNewUTT.setText(QCoreApplication.translate("MainWindow", "Trigger", None))
        self.actionNewUTE.setText(QCoreApplication.translate("MainWindow", "Encounter", None))
        self.actionNewUTS.setText(QCoreApplication.translate("MainWindow", "Sound", None))
        self.actionNewUTM.setText(QCoreApplication.translate("MainWindow", "Merchant", None))
        self.actionNewTLK.setText(QCoreApplication.translate("MainWindow", "TalkTable", None))
        self.actionNewUTI.setText(QCoreApplication.translate("MainWindow", "Item", None))
        self.actionNewDLG.setText(QCoreApplication.translate("MainWindow", "Dialog", None))
        self.actionNewNSS.setText(QCoreApplication.translate("MainWindow", "Script", None))
        self.actionEditJRL.setText(QCoreApplication.translate("MainWindow", "Edit Journal", None))
        self.actionFileSearch.setText(QCoreApplication.translate("MainWindow", "File Search", None))
        self.actionGeometryEditor.setText(QCoreApplication.translate("MainWindow", "Geometry Editor", None))
        self.defaultLight.setText(QCoreApplication.translate("MainWindow", "Native", None))
        self.fusionLight.setText(QCoreApplication.translate("MainWindow", "Fusion (Light)", None))
        self.fusionDark.setText(QCoreApplication.translate("MainWindow", "Fusion (Dark)", None))
        self.breezeDark.setText(QCoreApplication.translate("MainWindow", "Breeze (Dark)", None))
        self.qDarkStyle.setText(QCoreApplication.translate("MainWindow", "QDarkStyle", None))
        self.amoled.setText(QCoreApplication.translate("MainWindow", "AMOLED", None))
        self.aqua.setText(QCoreApplication.translate("MainWindow", "Aqua", None))
        self.consoleStyle.setText(QCoreApplication.translate("MainWindow", "ConsoleStyle", None))
        self.elegantDark.setText(QCoreApplication.translate("MainWindow", "ElegantDark", None))
        self.macOS.setText(QCoreApplication.translate("MainWindow", "MacOS", None))
        self.manjaroMix.setText(QCoreApplication.translate("MainWindow", "ManjaroMix", None))
        self.materialDark.setText(QCoreApplication.translate("MainWindow", "MaterialDark", None))
        self.actionIndoorMapBuilder.setText(QCoreApplication.translate("MainWindow", "Indoor Map Builder", None))
        self.actionEditModule.setText(QCoreApplication.translate("MainWindow", "Edit Module", None))
        self.actionInstructions.setText(QCoreApplication.translate("MainWindow", "Instructions", None))
        self.actionDiscordHolocronToolset.setText(QCoreApplication.translate("MainWindow", "Holocron Toolset", None))
        self.actionDiscordKotOR.setText(QCoreApplication.translate("MainWindow", "KOTOR Community Portal", None))
        self.actionDiscordDeadlyStream.setText(QCoreApplication.translate("MainWindow", "Deadly Stream", None))
        self.actionModuleDesigner.setText(QCoreApplication.translate("MainWindow", "Module Designer", None))
        self.resourceTabs.setTabText(self.resourceTabs.indexOf(self.coreTab), QCoreApplication.translate("MainWindow", "Core", None))
        self.resourceTabs.setTabText(self.resourceTabs.indexOf(self.savesTab), QCoreApplication.translate("MainWindow", "Saves", None))
        self.specialActionButton.setText(QCoreApplication.translate("MainWindow", "Designer", None))
        self.resourceTabs.setTabText(self.resourceTabs.indexOf(self.modulesTab), QCoreApplication.translate("MainWindow", "Modules", None))
        self.resourceTabs.setTabText(self.resourceTabs.indexOf(self.overrideTab), QCoreApplication.translate("MainWindow", "Override", None))
        self.resourceTabs.setTabText(self.resourceTabs.indexOf(self.texturesTab), QCoreApplication.translate("MainWindow", "Textures", None))
        self.openButton.setText(QCoreApplication.translate("MainWindow", "Open Selected", None))
        self.extractButton.setText(QCoreApplication.translate("MainWindow", "Extract Selected", None))
        self.tpcGroup_2.setTitle(QCoreApplication.translate("MainWindow", "TPC", None))
        self.tpcDecompileCheckbox.setText(QCoreApplication.translate("MainWindow", "Decompile", None))
        self.tpcTxiCheckbox.setText(QCoreApplication.translate("MainWindow", "Extract TXI", None))
        self.mdlGroup_2.setTitle(QCoreApplication.translate("MainWindow", "MDL", None))
#if QT_CONFIG(tooltip)
        self.mdlDecompileCheckbox.setToolTip(QCoreApplication.translate("MainWindow", "Decompile feature is not available.", None))
#endif // QT_CONFIG(tooltip)
        self.mdlDecompileCheckbox.setText(QCoreApplication.translate("MainWindow", "Decompile", None))
        self.mdlTexturesCheckbox.setText(QCoreApplication.translate("MainWindow", "Extract Textures", None))
        self.menuFile.setTitle(QCoreApplication.translate("MainWindow", "File", None))
        self.menuNew.setTitle(QCoreApplication.translate("MainWindow", "New", None))
        self.menuRecentFiles.setTitle(QCoreApplication.translate("MainWindow", "Recent Files", None))
        self.menuEdit.setTitle(QCoreApplication.translate("MainWindow", "Edit", None))
        self.menuTheme.setTitle(QCoreApplication.translate("MainWindow", "Theme", None))
        self.menuTools.setTitle(QCoreApplication.translate("MainWindow", "Tools", None))
        self.menuHelp.setTitle(QCoreApplication.translate("MainWindow", "Help", None))
        self.menuDiscord.setTitle(QCoreApplication.translate("MainWindow", "Discord", None))
    # retranslateUi

