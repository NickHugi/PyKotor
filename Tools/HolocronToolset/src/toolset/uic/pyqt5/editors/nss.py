# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '..\ui\editors\nss.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1180, 690)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.vboxlytCentralWidget = QtWidgets.QVBoxLayout(self.centralwidget)
        self.vboxlytCentralWidget.setObjectName("vboxlytCentralWidget")
        self.middleTopHorizLyt = QtWidgets.QHBoxLayout()
        self.middleTopHorizLyt.setObjectName("middleTopHorizLyt")
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.middleTopHorizLyt.addItem(spacerItem)
        self.gameSelector = QtWidgets.QComboBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.gameSelector.sizePolicy().hasHeightForWidth())
        self.gameSelector.setSizePolicy(sizePolicy)
        self.gameSelector.setPlaceholderText("")
        self.gameSelector.setObjectName("gameSelector")
        self.gameSelector.addItem("")
        self.gameSelector.addItem("")
        self.middleTopHorizLyt.addWidget(self.gameSelector)
        self.vboxlytCentralWidget.addLayout(self.middleTopHorizLyt)
        spacerItem1 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.vboxlytCentralWidget.addItem(spacerItem1)
        self.editorTabs = QtWidgets.QTabWidget(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.editorTabs.sizePolicy().hasHeightForWidth())
        self.editorTabs.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setStyleStrategy(QtGui.QFont.NoAntialias)
        self.editorTabs.setFont(font)
        self.editorTabs.setAcceptDrops(True)
        self.editorTabs.setTabsClosable(True)
        self.editorTabs.setMovable(True)
        self.editorTabs.setObjectName("editorTabs")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.tab)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.searchBar = QtWidgets.QLineEdit(self.tab)
        self.searchBar.setObjectName("searchBar")
        self.verticalLayout_6.addWidget(self.searchBar)
        self.codeEdit = CodeEditor(self.tab)
        self.codeEdit.setObjectName("codeEdit")
        self.verticalLayout_6.addWidget(self.codeEdit)
        self.editorTabs.addTab(self.tab, "")
        self.vboxlytCentralWidget.addWidget(self.editorTabs)
        self.panelTabs = QtWidgets.QTabWidget(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(10)
        self.panelTabs.setFont(font)
        self.panelTabs.setMovable(True)
        self.panelTabs.setTabBarAutoHide(True)
        self.panelTabs.setObjectName("panelTabs")
        self.outputTab = QtWidgets.QWidget()
        self.outputTab.setObjectName("outputTab")
        self.vertLytPanelTabs = QtWidgets.QVBoxLayout(self.outputTab)
        self.vertLytPanelTabs.setObjectName("vertLytPanelTabs")
        self.outputEdit = QtWidgets.QPlainTextEdit(self.outputTab)
        font = QtGui.QFont()
        font.setFamily("Lucida Console")
        font.setPointSize(10)
        self.outputEdit.setFont(font)
        self.outputEdit.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.IBeamCursor))
        self.outputEdit.setTabChangesFocus(True)
        self.outputEdit.setReadOnly(True)
        self.outputEdit.setObjectName("outputEdit")
        self.vertLytPanelTabs.addWidget(self.outputEdit)
        self.panelTabs.addTab(self.outputTab, "")
        self.terminalTab = QtWidgets.QWidget()
        self.terminalTab.setObjectName("terminalTab")
        self.verticalLayout_13 = QtWidgets.QVBoxLayout(self.terminalTab)
        self.verticalLayout_13.setObjectName("verticalLayout_13")
        self.terminalWidget = QtWidgets.QWidget(self.terminalTab)
        self.terminalWidget.setMinimumSize(QtCore.QSize(0, 100))
        self.terminalWidget.setObjectName("terminalWidget")
        self.verticalLayout_13.addWidget(self.terminalWidget)
        self.panelTabs.addTab(self.terminalTab, "")
        self.debugTab = QtWidgets.QWidget()
        self.debugTab.setObjectName("debugTab")
        self.verticalLayout_12 = QtWidgets.QVBoxLayout(self.debugTab)
        self.verticalLayout_12.setObjectName("verticalLayout_12")
        self.debugTable = QtWidgets.QTableWidget(self.debugTab)
        self.debugTable.setObjectName("debugTable")
        self.debugTable.setColumnCount(3)
        self.debugTable.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.debugTable.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.debugTable.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.debugTable.setHorizontalHeaderItem(2, item)
        self.verticalLayout_12.addWidget(self.debugTable)
        self.panelTabs.addTab(self.debugTab, "")
        self.findResultsTab = QtWidgets.QWidget()
        self.findResultsTab.setObjectName("findResultsTab")
        self.verticalLayout_11 = QtWidgets.QVBoxLayout(self.findResultsTab)
        self.verticalLayout_11.setObjectName("verticalLayout_11")
        self.findResultsTree = QtWidgets.QTreeWidget(self.findResultsTab)
        self.findResultsTree.setObjectName("findResultsTree")
        self.verticalLayout_11.addWidget(self.findResultsTree)
        self.panelTabs.addTab(self.findResultsTab, "")
        self.outlineTab = QtWidgets.QWidget()
        self.outlineTab.setObjectName("outlineTab")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.outlineTab)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.outlineView = QtWidgets.QTreeWidget(self.outlineTab)
        self.outlineView.setObjectName("outlineView")
        self.verticalLayout_4.addWidget(self.outlineView)
        self.panelTabs.addTab(self.outlineTab, "")
        self.learnTab = QtWidgets.QWidget()
        self.learnTab.setObjectName("learnTab")
        self.vertLytLearnTab = QtWidgets.QVBoxLayout(self.learnTab)
        self.vertLytLearnTab.setObjectName("vertLytLearnTab")
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.functionSearchEdit = QtWidgets.QLineEdit(self.learnTab)
        self.functionSearchEdit.setObjectName("functionSearchEdit")
        self.horizontalLayout_5.addWidget(self.functionSearchEdit)
        self.constantSearchEdit = QtWidgets.QLineEdit(self.learnTab)
        self.constantSearchEdit.setObjectName("constantSearchEdit")
        self.horizontalLayout_5.addWidget(self.constantSearchEdit)
        self.vertLytLearnTab.addLayout(self.horizontalLayout_5)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.functionList = QtWidgets.QListWidget(self.learnTab)
        self.functionList.setObjectName("functionList")
        self.horizontalLayout.addWidget(self.functionList)
        self.constantList = QtWidgets.QListWidget(self.learnTab)
        self.constantList.setObjectName("constantList")
        self.horizontalLayout.addWidget(self.constantList)
        self.vertLytLearnTab.addLayout(self.horizontalLayout)
        self.panelTabs.addTab(self.learnTab, "")
        self.vboxlytCentralWidget.addWidget(self.panelTabs)
        self.progressBar = QtWidgets.QProgressBar(self.centralwidget)
        self.progressBar.setMaximum(1)
        self.progressBar.setTextVisible(False)
        self.progressBar.setObjectName("progressBar")
        self.vboxlytCentralWidget.addWidget(self.progressBar)
        self.vboxlytCentralWidget.setStretch(2, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.fileExplorerDock = QtWidgets.QDockWidget(MainWindow)
        self.fileExplorerDock.setObjectName("fileExplorerDock")
        self.fileExplorerContents = QtWidgets.QWidget()
        self.fileExplorerContents.setObjectName("fileExplorerContents")
        self.fileExplorerLayout = QtWidgets.QVBoxLayout(self.fileExplorerContents)
        self.fileExplorerLayout.setObjectName("fileExplorerLayout")
        self.lineEdit = QtWidgets.QLineEdit(self.fileExplorerContents)
        self.lineEdit.setObjectName("lineEdit")
        self.fileExplorerLayout.addWidget(self.lineEdit)
        self.fileExplorerView = RobustTreeView(self.fileExplorerContents)
        self.fileExplorerView.setObjectName("fileExplorerView")
        self.fileExplorerLayout.addWidget(self.fileExplorerView)
        self.fileSearchEdit = QtWidgets.QLineEdit(self.fileExplorerContents)
        self.fileSearchEdit.setObjectName("fileSearchEdit")
        self.fileExplorerLayout.addWidget(self.fileSearchEdit)
        self.refreshFileExplorerButton = QtWidgets.QPushButton(self.fileExplorerContents)
        self.refreshFileExplorerButton.setObjectName("refreshFileExplorerButton")
        self.fileExplorerLayout.addWidget(self.refreshFileExplorerButton)
        self.fileExplorerDock.setWidget(self.fileExplorerContents)
        MainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(1), self.fileExplorerDock)
        self.bookmarksDock = QtWidgets.QDockWidget(MainWindow)
        self.bookmarksDock.setAcceptDrops(True)
        self.bookmarksDock.setObjectName("bookmarksDock")
        self.dockWidgetContents_2 = QtWidgets.QWidget()
        self.dockWidgetContents_2.setObjectName("dockWidgetContents_2")
        self.verticalLayout_14 = QtWidgets.QVBoxLayout(self.dockWidgetContents_2)
        self.verticalLayout_14.setObjectName("verticalLayout_14")
        self.bookmarkTree = QtWidgets.QTreeWidget(self.dockWidgetContents_2)
        self.bookmarkTree.setObjectName("bookmarkTree")
        self.verticalLayout_14.addWidget(self.bookmarkTree)
        self.addBookmarkButton = QtWidgets.QPushButton(self.dockWidgetContents_2)
        self.addBookmarkButton.setObjectName("addBookmarkButton")
        self.verticalLayout_14.addWidget(self.addBookmarkButton)
        self.removeBookmarkButton = QtWidgets.QPushButton(self.dockWidgetContents_2)
        self.removeBookmarkButton.setObjectName("removeBookmarkButton")
        self.verticalLayout_14.addWidget(self.removeBookmarkButton)
        self.bookmarksDock.setWidget(self.dockWidgetContents_2)
        MainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(2), self.bookmarksDock)
        self.snippetsDock = QtWidgets.QDockWidget(MainWindow)
        self.snippetsDock.setAcceptDrops(True)
        self.snippetsDock.setObjectName("snippetsDock")
        self.snippetsDockContents = QtWidgets.QWidget()
        self.snippetsDockContents.setObjectName("snippetsDockContents")
        self.snippetsLayout = QtWidgets.QVBoxLayout(self.snippetsDockContents)
        self.snippetsLayout.setObjectName("snippetsLayout")
        self.snippetSearchEdit = QtWidgets.QLineEdit(self.snippetsDockContents)
        self.snippetSearchEdit.setObjectName("snippetSearchEdit")
        self.snippetsLayout.addWidget(self.snippetSearchEdit)
        self.snippetList = QtWidgets.QListWidget(self.snippetsDockContents)
        self.snippetList.setObjectName("snippetList")
        self.snippetsLayout.addWidget(self.snippetList)
        self.snippetButtonsLayout = QtWidgets.QHBoxLayout()
        self.snippetButtonsLayout.setObjectName("snippetButtonsLayout")
        self.snippetAddButton = QtWidgets.QPushButton(self.snippetsDockContents)
        self.snippetAddButton.setObjectName("snippetAddButton")
        self.snippetButtonsLayout.addWidget(self.snippetAddButton)
        self.snippetDelButton = QtWidgets.QPushButton(self.snippetsDockContents)
        self.snippetDelButton.setObjectName("snippetDelButton")
        self.snippetButtonsLayout.addWidget(self.snippetDelButton)
        self.snippetsLayout.addLayout(self.snippetButtonsLayout)
        self.snippetReloadButton = QtWidgets.QPushButton(self.snippetsDockContents)
        self.snippetReloadButton.setObjectName("snippetReloadButton")
        self.snippetsLayout.addWidget(self.snippetReloadButton)
        self.snippetsDock.setWidget(self.snippetsDockContents)
        MainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(2), self.snippetsDock)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1180, 22))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuEdit = QtWidgets.QMenu(self.menubar)
        self.menuEdit.setObjectName("menuEdit")
        self.menuView = QtWidgets.QMenu(self.menubar)
        self.menuView.setObjectName("menuView")
        self.menuTools = QtWidgets.QMenu(self.menubar)
        self.menuTools.setObjectName("menuTools")
        self.menuDebug = QtWidgets.QMenu(self.menubar)
        self.menuDebug.setObjectName("menuDebug")
        self.menuHelp = QtWidgets.QMenu(self.menubar)
        self.menuHelp.setObjectName("menuHelp")
        MainWindow.setMenuBar(self.menubar)
        self.actionNew = QtWidgets.QAction(MainWindow)
        self.actionNew.setObjectName("actionNew")
        self.actionOpen = QtWidgets.QAction(MainWindow)
        self.actionOpen.setObjectName("actionOpen")
        self.actionSave = QtWidgets.QAction(MainWindow)
        self.actionSave.setObjectName("actionSave")
        self.actionSave_As = QtWidgets.QAction(MainWindow)
        self.actionSave_As.setObjectName("actionSave_As")
        self.actionSave_All = QtWidgets.QAction(MainWindow)
        self.actionSave_All.setObjectName("actionSave_All")
        self.actionClose = QtWidgets.QAction(MainWindow)
        self.actionClose.setObjectName("actionClose")
        self.actionClose_All = QtWidgets.QAction(MainWindow)
        self.actionClose_All.setObjectName("actionClose_All")
        self.actionCompile = QtWidgets.QAction(MainWindow)
        self.actionCompile.setObjectName("actionCompile")
        self.actionRun = QtWidgets.QAction(MainWindow)
        self.actionRun.setVisible(False)
        self.actionRun.setObjectName("actionRun")
        self.actionPrint = QtWidgets.QAction(MainWindow)
        self.actionPrint.setVisible(False)
        self.actionPrint.setIconVisibleInMenu(False)
        self.actionPrint.setObjectName("actionPrint")
        self.actionExit = QtWidgets.QAction(MainWindow)
        self.actionExit.setObjectName("actionExit")
        self.actionUndo = QtWidgets.QAction(MainWindow)
        self.actionUndo.setObjectName("actionUndo")
        self.actionRedo = QtWidgets.QAction(MainWindow)
        self.actionRedo.setObjectName("actionRedo")
        self.actionCut = QtWidgets.QAction(MainWindow)
        self.actionCut.setObjectName("actionCut")
        self.actionCopy = QtWidgets.QAction(MainWindow)
        self.actionCopy.setObjectName("actionCopy")
        self.actionPaste = QtWidgets.QAction(MainWindow)
        self.actionPaste.setObjectName("actionPaste")
        self.actionFind = QtWidgets.QAction(MainWindow)
        self.actionFind.setObjectName("actionFind")
        self.actionReplace = QtWidgets.QAction(MainWindow)
        self.actionReplace.setObjectName("actionReplace")
        self.actionFind_in_Files = QtWidgets.QAction(MainWindow)
        self.actionFind_in_Files.setObjectName("actionFind_in_Files")
        self.actionGo_to_Line = QtWidgets.QAction(MainWindow)
        self.actionGo_to_Line.setObjectName("actionGo_to_Line")
        self.actionGo_to_Function = QtWidgets.QAction(MainWindow)
        self.actionGo_to_Function.setObjectName("actionGo_to_Function")
        self.actionToggle_Comment = QtWidgets.QAction(MainWindow)
        self.actionToggle_Comment.setObjectName("actionToggle_Comment")
        self.actionIndent = QtWidgets.QAction(MainWindow)
        self.actionIndent.setObjectName("actionIndent")
        self.actionUnindent = QtWidgets.QAction(MainWindow)
        self.actionUnindent.setObjectName("actionUnindent")
        self.actionToggleFileExplorer = QtWidgets.QAction(MainWindow)
        self.actionToggleFileExplorer.setObjectName("actionToggleFileExplorer")
        self.actionToggleTerminal = QtWidgets.QAction(MainWindow)
        self.actionToggleTerminal.setObjectName("actionToggleTerminal")
        self.actionToggle_Output_Panel = QtWidgets.QAction(MainWindow)
        self.actionToggle_Output_Panel.setObjectName("actionToggle_Output_Panel")
        self.actionZoom_In = QtWidgets.QAction(MainWindow)
        self.actionZoom_In.setObjectName("actionZoom_In")
        self.actionZoom_Out = QtWidgets.QAction(MainWindow)
        self.actionZoom_Out.setObjectName("actionZoom_Out")
        self.actionReset_Zoom = QtWidgets.QAction(MainWindow)
        self.actionReset_Zoom.setObjectName("actionReset_Zoom")
        self.actionToggle_Line_Numbers = QtWidgets.QAction(MainWindow)
        self.actionToggle_Line_Numbers.setObjectName("actionToggle_Line_Numbers")
        self.actionToggle_Minimap = QtWidgets.QAction(MainWindow)
        self.actionToggle_Minimap.setObjectName("actionToggle_Minimap")
        self.actionToggle_Wrap_Lines = QtWidgets.QAction(MainWindow)
        self.actionToggle_Wrap_Lines.setObjectName("actionToggle_Wrap_Lines")
        self.actionManage_Snippets = QtWidgets.QAction(MainWindow)
        self.actionManage_Snippets.setObjectName("actionManage_Snippets")
        self.actionManage_Plugins = QtWidgets.QAction(MainWindow)
        self.actionManage_Plugins.setVisible(False)
        self.actionManage_Plugins.setObjectName("actionManage_Plugins")
        self.actionFormat_Code = QtWidgets.QAction(MainWindow)
        self.actionFormat_Code.setObjectName("actionFormat_Code")
        self.actionAnalyze_Code = QtWidgets.QAction(MainWindow)
        self.actionAnalyze_Code.setObjectName("actionAnalyze_Code")
        self.actionGenerate_Documentation = QtWidgets.QAction(MainWindow)
        self.actionGenerate_Documentation.setObjectName("actionGenerate_Documentation")
        self.actionExport_to_HTML = QtWidgets.QAction(MainWindow)
        self.actionExport_to_HTML.setObjectName("actionExport_to_HTML")
        self.actionStart_Debugging = QtWidgets.QAction(MainWindow)
        self.actionStart_Debugging.setObjectName("actionStart_Debugging")
        self.actionStop_Debugging = QtWidgets.QAction(MainWindow)
        self.actionStop_Debugging.setObjectName("actionStop_Debugging")
        self.actionStep_Over = QtWidgets.QAction(MainWindow)
        self.actionStep_Over.setObjectName("actionStep_Over")
        self.actionStep_Into = QtWidgets.QAction(MainWindow)
        self.actionStep_Into.setObjectName("actionStep_Into")
        self.actionStep_Out = QtWidgets.QAction(MainWindow)
        self.actionStep_Out.setObjectName("actionStep_Out")
        self.actionToggle_Breakpoint = QtWidgets.QAction(MainWindow)
        self.actionToggle_Breakpoint.setObjectName("actionToggle_Breakpoint")
        self.actionClear_All_Breakpoints = QtWidgets.QAction(MainWindow)
        self.actionClear_All_Breakpoints.setObjectName("actionClear_All_Breakpoints")
        self.actionDocumentation = QtWidgets.QAction(MainWindow)
        self.actionDocumentation.setObjectName("actionDocumentation")
        self.actionKeyboard_Shortcuts = QtWidgets.QAction(MainWindow)
        self.actionKeyboard_Shortcuts.setObjectName("actionKeyboard_Shortcuts")
        self.actionCheck_for_Updates = QtWidgets.QAction(MainWindow)
        self.actionCheck_for_Updates.setObjectName("actionCheck_for_Updates")
        self.actionAbout = QtWidgets.QAction(MainWindow)
        self.actionAbout.setObjectName("actionAbout")
        self.actionK1 = QtWidgets.QAction(MainWindow)
        self.actionK1.setCheckable(True)
        self.actionK1.setObjectName("actionK1")
        self.actionTSL = QtWidgets.QAction(MainWindow)
        self.actionTSL.setCheckable(True)
        self.actionTSL.setChecked(True)
        self.actionTSL.setObjectName("actionTSL")
        self.menuFile.addAction(self.actionNew)
        self.menuFile.addAction(self.actionOpen)
        self.menuFile.addAction(self.actionSave)
        self.menuFile.addAction(self.actionSave_As)
        self.menuFile.addAction(self.actionSave_All)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionClose)
        self.menuFile.addAction(self.actionClose_All)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionCompile)
        self.menuFile.addAction(self.actionRun)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionPrint)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionExit)
        self.menuEdit.addAction(self.actionUndo)
        self.menuEdit.addAction(self.actionRedo)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.actionCut)
        self.menuEdit.addAction(self.actionCopy)
        self.menuEdit.addAction(self.actionPaste)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.actionFind)
        self.menuEdit.addAction(self.actionReplace)
        self.menuEdit.addAction(self.actionFind_in_Files)
        self.menuEdit.addAction(self.actionGo_to_Line)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.actionToggle_Comment)
        self.menuEdit.addAction(self.actionIndent)
        self.menuEdit.addAction(self.actionUnindent)
        self.menuView.addAction(self.actionToggleFileExplorer)
        self.menuView.addAction(self.actionToggleTerminal)
        self.menuView.addAction(self.actionToggle_Output_Panel)
        self.menuView.addSeparator()
        self.menuView.addAction(self.actionZoom_In)
        self.menuView.addAction(self.actionZoom_Out)
        self.menuView.addAction(self.actionReset_Zoom)
        self.menuView.addSeparator()
        self.menuView.addAction(self.actionToggle_Line_Numbers)
        self.menuView.addAction(self.actionToggle_Wrap_Lines)
        self.menuTools.addAction(self.actionManage_Snippets)
        self.menuTools.addAction(self.actionManage_Plugins)
        self.menuTools.addSeparator()
        self.menuTools.addAction(self.actionFormat_Code)
        self.menuTools.addAction(self.actionAnalyze_Code)
        self.menuTools.addSeparator()
        self.menuDebug.addAction(self.actionStart_Debugging)
        self.menuDebug.addAction(self.actionStop_Debugging)
        self.menuDebug.addAction(self.actionStep_Over)
        self.menuDebug.addAction(self.actionStep_Into)
        self.menuDebug.addAction(self.actionStep_Out)
        self.menuDebug.addSeparator()
        self.menuDebug.addAction(self.actionToggle_Breakpoint)
        self.menuDebug.addAction(self.actionClear_All_Breakpoints)
        self.menuHelp.addAction(self.actionDocumentation)
        self.menuHelp.addAction(self.actionKeyboard_Shortcuts)
        self.menuHelp.addSeparator()
        self.menuHelp.addAction(self.actionCheck_for_Updates)
        self.menuHelp.addAction(self.actionAbout)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuEdit.menuAction())
        self.menubar.addAction(self.menuView.menuAction())
        self.menubar.addAction(self.menuTools.menuAction())
        self.menubar.addAction(self.menuDebug.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())

        self.retranslateUi(MainWindow)
        self.panelTabs.setCurrentIndex(2)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Advanced NSS Editor"))
        self.gameSelector.setToolTip(_translate("MainWindow", "This determines what constants to use for your IDE and impacts the PyKotor compiler (if used)"))
        self.gameSelector.setItemText(0, _translate("MainWindow", "K1"))
        self.gameSelector.setItemText(1, _translate("MainWindow", "TSL"))
        self.editorTabs.setWhatsThis(_translate("MainWindow", "Main Code Area"))
        self.searchBar.setPlaceholderText(_translate("MainWindow", "Search..."))
        self.editorTabs.setTabText(self.editorTabs.indexOf(self.tab), _translate("MainWindow", "Untitled"))
        self.outputEdit.setWhatsThis(_translate("MainWindow", "Output Window for the NWScript Editor"))
        self.outputEdit.setPlaceholderText(_translate("MainWindow", "Important errors and logs will appear here."))
        self.panelTabs.setTabText(self.panelTabs.indexOf(self.outputTab), _translate("MainWindow", "Output"))
        self.panelTabs.setTabText(self.panelTabs.indexOf(self.terminalTab), _translate("MainWindow", "Terminal"))
        item = self.debugTable.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Variable"))
        item = self.debugTable.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Value"))
        item = self.debugTable.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Type"))
        self.panelTabs.setTabText(self.panelTabs.indexOf(self.debugTab), _translate("MainWindow", "Debug"))
        self.findResultsTree.headerItem().setText(0, _translate("MainWindow", "File"))
        self.findResultsTree.headerItem().setText(1, _translate("MainWindow", "Line"))
        self.findResultsTree.headerItem().setText(2, _translate("MainWindow", "Content"))
        self.panelTabs.setTabText(self.panelTabs.indexOf(self.findResultsTab), _translate("MainWindow", "Find Results"))
        self.panelTabs.setTabText(self.panelTabs.indexOf(self.outlineTab), _translate("MainWindow", "Outline"))
        self.functionSearchEdit.setPlaceholderText(_translate("MainWindow", "Search functions..."))
        self.constantSearchEdit.setPlaceholderText(_translate("MainWindow", "Search constants..."))
        self.panelTabs.setTabText(self.panelTabs.indexOf(self.learnTab), _translate("MainWindow", "Constants"))
        self.fileExplorerDock.setWindowTitle(_translate("MainWindow", "File Explorer"))
        self.lineEdit.setPlaceholderText(_translate("MainWindow", "Address Bar"))
        self.fileSearchEdit.setPlaceholderText(_translate("MainWindow", "Search files..."))
        self.refreshFileExplorerButton.setText(_translate("MainWindow", "Refresh"))
        self.bookmarksDock.setWindowTitle(_translate("MainWindow", "Bookmarks"))
        self.bookmarkTree.headerItem().setText(0, _translate("MainWindow", "Line"))
        self.bookmarkTree.headerItem().setText(1, _translate("MainWindow", "Description"))
        self.addBookmarkButton.setText(_translate("MainWindow", "Add Bookmark"))
        self.removeBookmarkButton.setText(_translate("MainWindow", "Remove Bookmark"))
        self.snippetsDock.setWindowTitle(_translate("MainWindow", "Snippets"))
        self.snippetSearchEdit.setPlaceholderText(_translate("MainWindow", "Search snippets..."))
        self.snippetAddButton.setText(_translate("MainWindow", "Add"))
        self.snippetDelButton.setText(_translate("MainWindow", "Remove"))
        self.snippetReloadButton.setText(_translate("MainWindow", "Reload"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuEdit.setTitle(_translate("MainWindow", "Edit"))
        self.menuView.setTitle(_translate("MainWindow", "View"))
        self.menuTools.setTitle(_translate("MainWindow", "Tools"))
        self.menuDebug.setTitle(_translate("MainWindow", "Debug"))
        self.menuHelp.setTitle(_translate("MainWindow", "Help"))
        self.actionNew.setText(_translate("MainWindow", "New"))
        self.actionNew.setShortcut(_translate("MainWindow", "Ctrl+Shift+B"))
        self.actionOpen.setText(_translate("MainWindow", "Open"))
        self.actionOpen.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.actionSave.setText(_translate("MainWindow", "Save"))
        self.actionSave.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.actionSave_As.setText(_translate("MainWindow", "Save As"))
        self.actionSave_As.setShortcut(_translate("MainWindow", "Ctrl+Shift+S"))
        self.actionSave_All.setText(_translate("MainWindow", "Save All"))
        self.actionSave_All.setShortcut(_translate("MainWindow", "Ctrl+Shift+A"))
        self.actionClose.setText(_translate("MainWindow", "Close"))
        self.actionClose.setShortcut(_translate("MainWindow", "Ctrl+W"))
        self.actionClose_All.setText(_translate("MainWindow", "Close All"))
        self.actionClose_All.setShortcut(_translate("MainWindow", "Ctrl+Shift+W"))
        self.actionCompile.setText(_translate("MainWindow", "Compile"))
        self.actionCompile.setShortcut(_translate("MainWindow", "Ctrl+Shift+B"))
        self.actionRun.setText(_translate("MainWindow", "Run"))
        self.actionRun.setShortcut(_translate("MainWindow", "F6"))
        self.actionPrint.setText(_translate("MainWindow", "Print"))
        self.actionPrint.setShortcut(_translate("MainWindow", "Ctrl+P"))
        self.actionExit.setText(_translate("MainWindow", "Exit"))
        self.actionExit.setShortcut(_translate("MainWindow", "Ctrl+Q"))
        self.actionUndo.setText(_translate("MainWindow", "Undo"))
        self.actionUndo.setShortcut(_translate("MainWindow", "Ctrl+Z"))
        self.actionRedo.setText(_translate("MainWindow", "Redo"))
        self.actionRedo.setShortcut(_translate("MainWindow", "Ctrl+Y"))
        self.actionCut.setText(_translate("MainWindow", "Cut"))
        self.actionCut.setShortcut(_translate("MainWindow", "Ctrl+X"))
        self.actionCopy.setText(_translate("MainWindow", "Copy"))
        self.actionCopy.setShortcut(_translate("MainWindow", "Ctrl+C"))
        self.actionPaste.setText(_translate("MainWindow", "Paste"))
        self.actionPaste.setShortcut(_translate("MainWindow", "Ctrl+V"))
        self.actionFind.setText(_translate("MainWindow", "Find"))
        self.actionFind.setShortcut(_translate("MainWindow", "Ctrl+F"))
        self.actionReplace.setText(_translate("MainWindow", "Replace"))
        self.actionReplace.setShortcut(_translate("MainWindow", "Ctrl+H"))
        self.actionFind_in_Files.setText(_translate("MainWindow", "Find in Files"))
        self.actionFind_in_Files.setShortcut(_translate("MainWindow", "Ctrl+Shift+F"))
        self.actionGo_to_Line.setText(_translate("MainWindow", "Go to Line"))
        self.actionGo_to_Line.setShortcut(_translate("MainWindow", "Ctrl+G"))
        self.actionGo_to_Function.setText(_translate("MainWindow", "Go to Function"))
        self.actionGo_to_Function.setShortcut(_translate("MainWindow", "Ctrl+Shift+G"))
        self.actionToggle_Comment.setText(_translate("MainWindow", "Block Comment"))
        self.actionToggle_Comment.setShortcut(_translate("MainWindow", "Ctrl+/"))
        self.actionIndent.setText(_translate("MainWindow", "Indent"))
        self.actionIndent.setShortcut(_translate("MainWindow", "Ctrl+I"))
        self.actionUnindent.setText(_translate("MainWindow", "Unindent"))
        self.actionUnindent.setShortcut(_translate("MainWindow", "Ctrl+Shift+I"))
        self.actionToggleFileExplorer.setText(_translate("MainWindow", "Toggle File Explorer"))
        self.actionToggleFileExplorer.setShortcut(_translate("MainWindow", "Ctrl+B"))
        self.actionToggleTerminal.setText(_translate("MainWindow", "Toggle Snip/Bookmark Panel"))
        self.actionToggleTerminal.setShortcut(_translate("MainWindow", "Ctrl+`"))
        self.actionToggle_Output_Panel.setText(_translate("MainWindow", "Toggle Output Panel"))
        self.actionToggle_Output_Panel.setShortcut(_translate("MainWindow", "Ctrl+Shift+O"))
        self.actionZoom_In.setText(_translate("MainWindow", "Zoom In"))
        self.actionZoom_In.setShortcut(_translate("MainWindow", "Ctrl++"))
        self.actionZoom_Out.setText(_translate("MainWindow", "Zoom Out"))
        self.actionZoom_Out.setShortcut(_translate("MainWindow", "Ctrl+-"))
        self.actionReset_Zoom.setText(_translate("MainWindow", "Reset Zoom"))
        self.actionReset_Zoom.setShortcut(_translate("MainWindow", "Ctrl+0"))
        self.actionToggle_Line_Numbers.setText(_translate("MainWindow", "Toggle Line Numbers"))
        self.actionToggle_Line_Numbers.setShortcut(_translate("MainWindow", "Ctrl+Shift+L"))
        self.actionToggle_Minimap.setText(_translate("MainWindow", "Toggle Minimap"))
        self.actionToggle_Minimap.setShortcut(_translate("MainWindow", "Ctrl+Shift+M"))
        self.actionToggle_Wrap_Lines.setText(_translate("MainWindow", "Toggle Wrap Lines"))
        self.actionToggle_Wrap_Lines.setShortcut(_translate("MainWindow", "Ctrl+Shift+W"))
        self.actionManage_Snippets.setText(_translate("MainWindow", "Manage Snippets"))
        self.actionManage_Plugins.setText(_translate("MainWindow", "Manage Plugins"))
        self.actionFormat_Code.setText(_translate("MainWindow", "Format Code"))
        self.actionFormat_Code.setShortcut(_translate("MainWindow", "Ctrl+Shift+F"))
        self.actionAnalyze_Code.setText(_translate("MainWindow", "Analyze Code"))
        self.actionAnalyze_Code.setShortcut(_translate("MainWindow", "Ctrl+Shift+A"))
        self.actionGenerate_Documentation.setText(_translate("MainWindow", "Generate Documentation"))
        self.actionGenerate_Documentation.setShortcut(_translate("MainWindow", "Ctrl+Shift+D"))
        self.actionExport_to_HTML.setText(_translate("MainWindow", "Export to HTML"))
        self.actionExport_to_HTML.setShortcut(_translate("MainWindow", "Ctrl+Shift+E"))
        self.actionStart_Debugging.setText(_translate("MainWindow", "Start Debugging"))
        self.actionStart_Debugging.setShortcut(_translate("MainWindow", "F9"))
        self.actionStop_Debugging.setText(_translate("MainWindow", "Stop Debugging"))
        self.actionStop_Debugging.setShortcut(_translate("MainWindow", "Shift+F9"))
        self.actionStep_Over.setText(_translate("MainWindow", "Step Over"))
        self.actionStep_Over.setShortcut(_translate("MainWindow", "F10"))
        self.actionStep_Into.setText(_translate("MainWindow", "Step Into"))
        self.actionStep_Into.setShortcut(_translate("MainWindow", "F11"))
        self.actionStep_Out.setText(_translate("MainWindow", "Step Out"))
        self.actionStep_Out.setShortcut(_translate("MainWindow", "Shift+F11"))
        self.actionToggle_Breakpoint.setText(_translate("MainWindow", "Toggle Breakpoint"))
        self.actionToggle_Breakpoint.setShortcut(_translate("MainWindow", "F12"))
        self.actionClear_All_Breakpoints.setText(_translate("MainWindow", "Clear All Breakpoints"))
        self.actionClear_All_Breakpoints.setShortcut(_translate("MainWindow", "Ctrl+Shift+F12"))
        self.actionDocumentation.setText(_translate("MainWindow", "Documentation"))
        self.actionDocumentation.setShortcut(_translate("MainWindow", "F1"))
        self.actionKeyboard_Shortcuts.setText(_translate("MainWindow", "Keyboard Shortcuts"))
        self.actionKeyboard_Shortcuts.setShortcut(_translate("MainWindow", "Ctrl+Shift+K"))
        self.actionCheck_for_Updates.setText(_translate("MainWindow", "Check for Updates"))
        self.actionAbout.setText(_translate("MainWindow", "About"))
        self.actionK1.setText(_translate("MainWindow", "K1"))
        self.actionTSL.setText(_translate("MainWindow", "TSL"))
from toolset.gui.common.widgets.code_editor import CodeEditor
from utility.ui_libraries.qt.widgets.itemviews.tree import RobustTreeView

from toolset.rcc import resources_rc_pyqt5
